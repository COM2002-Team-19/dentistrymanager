package dentistrymanager.gui;

import java.awt.EventQueue;

import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.WindowConstants;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;

public class RegisterPatient extends JFrame {

    /**
     * Creates new form RegisterPatient
     */
    public RegisterPatient() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    //GEN-BEGIN:initComponents
    private void initComponents() {

        firstNameLabel = new JLabel();
        nameField = new JTextField();
        surnameLabel = new JLabel();
        titleLabel = new JLabel();
        titleCombo = new JComboBox<>();
        surnameField = new JTextField();
        dateOfBirthLabel = new JLabel();
        dayCombo = new JComboBox<>();
        monthCombo = new JComboBox<>();
        yearCombo = new JComboBox<>();
        phoneLabel = new JLabel();
        phoneTextField = new JTextField();
        addressPanel = new JPanel();
        houseNumberLabel = new JLabel();
        houseNumberField = new JTextField();
        streetLabel = new JLabel();
        streetField = new JTextField();
        districtLabel = new JLabel();
        districtField = new JTextField();
        cityLabel = new JLabel();
        cityField = new JTextField();
        submitButton = new JButton();
        cancelButton = new JButton();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        firstNameLabel.setText("Firstname");

        nameField.setText("jTextField1");

        surnameLabel.setText("Surname:");

        titleLabel.setText("Title:");

        titleCombo.setModel(new DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        surnameField.setText("jTextField1");

        dateOfBirthLabel.setText("Date of birth:");

        dayCombo.setModel(new DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        monthCombo.setModel(new DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        yearCombo.setModel(new DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        phoneLabel.setText("Phone number:");

        phoneTextField.setText("jTextField2");

        addressPanel.setBorder(BorderFactory.createEtchedBorder());

        houseNumberLabel.setText("House Number:");

        houseNumberField.setText("jTextField1");

        streetLabel.setText("Street:");

        streetField.setText("jTextField2");

        districtLabel.setText("District:");

        districtField.setText("jTextField1");

        cityLabel.setText("City:");

        cityField.setText("jTextField1");

        GroupLayout addressPanelLayout = new GroupLayout(addressPanel);
        addressPanelLayout.setHorizontalGroup(
        	addressPanelLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(addressPanelLayout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(addressPanelLayout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(addressPanelLayout.createSequentialGroup()
        					.addGroup(addressPanelLayout.createParallelGroup(Alignment.LEADING)
        						.addComponent(districtLabel)
        						.addComponent(cityLabel))
        					.addGap(109)
        					.addGroup(addressPanelLayout.createParallelGroup(Alignment.TRAILING, false)
        						.addComponent(districtField)
        						.addComponent(cityField, GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)))
        				.addGroup(addressPanelLayout.createSequentialGroup()
        					.addGroup(addressPanelLayout.createParallelGroup(Alignment.LEADING)
        						.addComponent(houseNumberLabel)
        						.addComponent(streetLabel))
        					.addGap(74)
        					.addGroup(addressPanelLayout.createParallelGroup(Alignment.TRAILING, false)
        						.addComponent(streetField)
        						.addComponent(houseNumberField, GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE))))
        			.addContainerGap())
        );
        addressPanelLayout.setVerticalGroup(
        	addressPanelLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(addressPanelLayout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(addressPanelLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(houseNumberField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(houseNumberLabel))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(addressPanelLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(streetLabel)
        				.addComponent(streetField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(addressPanelLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(districtField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(districtLabel))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(addressPanelLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(cityField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(cityLabel))
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addressPanel.setLayout(addressPanelLayout);

        submitButton.setText("Submit");

        cancelButton.setText("Back");

        GroupLayout layout = new GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(addressPanel, GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
        				.addComponent(phoneLabel)
        				.addGroup(layout.createSequentialGroup()
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addGroup(Alignment.TRAILING, layout.createSequentialGroup()
        							.addComponent(cancelButton, GroupLayout.PREFERRED_SIZE, 60, GroupLayout.PREFERRED_SIZE)
        							.addPreferredGap(ComponentPlacement.UNRELATED)
        							.addComponent(submitButton, GroupLayout.PREFERRED_SIZE, 91, GroupLayout.PREFERRED_SIZE)
        							.addPreferredGap(ComponentPlacement.RELATED))
        						.addGroup(layout.createSequentialGroup()
        							.addGroup(layout.createParallelGroup(Alignment.LEADING)
        								.addComponent(surnameLabel)
        								.addComponent(dateOfBirthLabel)
        								.addComponent(firstNameLabel)
        								.addComponent(titleLabel))
        							.addGap(112)
        							.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        								.addGroup(layout.createSequentialGroup()
        									.addComponent(dayCombo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        									.addPreferredGap(ComponentPlacement.RELATED)
        									.addComponent(monthCombo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        									.addPreferredGap(ComponentPlacement.RELATED)
        									.addComponent(yearCombo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        								.addGroup(layout.createSequentialGroup()
        									.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
        										.addComponent(surnameField, Alignment.TRAILING)
        										.addComponent(nameField, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
        										.addComponent(phoneTextField, Alignment.TRAILING))
        									.addPreferredGap(ComponentPlacement.RELATED))
        								.addGroup(layout.createSequentialGroup()
        									.addComponent(titleCombo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        									.addPreferredGap(ComponentPlacement.RELATED)))))
        					.addGap(0)))
        			.addContainerGap())
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(titleLabel)
        				.addComponent(titleCombo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(firstNameLabel)
        				.addComponent(nameField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(3)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(surnameLabel)
        				.addComponent(surnameField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(monthCombo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(yearCombo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(dateOfBirthLabel)
        				.addComponent(dayCombo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(phoneLabel)
        				.addComponent(phoneTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(addressPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(submitButton)
        				.addComponent(cancelButton))
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        getContentPane().setLayout(layout);

        pack();
    }//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RegisterPatient.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(RegisterPatient.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(RegisterPatient.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(RegisterPatient.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterPatient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private JPanel addressPanel;
    private JButton cancelButton;
    private JTextField cityField;
    private JLabel cityLabel;
    private JLabel dateOfBirthLabel;
    private JComboBox<String> dayCombo;
    private JTextField districtField;
    private JLabel districtLabel;
    private JLabel firstNameLabel;
    private JTextField houseNumberField;
    private JLabel houseNumberLabel;
    private JComboBox<String> monthCombo;
    private JTextField nameField;
    private JLabel phoneLabel;
    private JTextField phoneTextField;
    private JTextField streetField;
    private JLabel streetLabel;
    private JButton submitButton;
    private JTextField surnameField;
    private JLabel surnameLabel;
    private JComboBox<String> titleCombo;
    private JLabel titleLabel;
    private JComboBox<String> yearCombo;
    // End of variables declaration
}
