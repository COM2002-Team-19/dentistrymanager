package src.dentistrymanager.gui;

import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.AbstractListModel;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.ScrollPaneConstants;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.WindowConstants;

import dentistrymanager.Patient;

import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import dentistrymanager.*;
import java.sql.*;

@SuppressWarnings("serial")
public class FindPatient extends JFrame {

    /**
     * Creates new form FindPatient
     */


    public FindPatient() {
		try(Connection connection = DBConnect.getConnection(false)){
			this.patients = Patient.getPatient(connection, "");
			this.selectedPatient = null;
		}
		catch(SQLException e){
			DBConnect.printSQLError(e);
		}
		initComponents();
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    //GEN-BEGIN:initComponents
    
    private void initComponents() {
        
        searchField = new JTextField();
        searchField.setText("Patient Name");
        searchButton = new JButton(); // #TODO button action
        searchButton.setText("Search");
		searchButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				enteredName = searchField.getText();
				try(Connection connection = DBConnect.getConnection(false)){
					patients = Patient.getPatient(connection,enteredName);
				}
				catch(SQLException e){
					DBConnect.printSQLError(e);
				}
			}
		});
        
        searchResults = new JScrollPane();
        searchResultsList = new JList<Patient>();
        
        
        searchResultsList.setModel(new AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        
        searchResultsList.
        patientDetails = new JPanel();
        
        nameLabel = new JLabel();
        nameLabel.setText("Name:");
        nameField = new JTextField();
        nameField.setText("to fill"); //#TODO
        nameField.setEditable(false);
        
        addressLabel = new JLabel();
        addressLabel.setText("Address:");
        addressField = new JScrollPane();
        addressArea = new JTextArea();
        addressArea.setText("to fill"); //#TODO
        addressArea.setEditable(false);
        
        phoneLabel = new JLabel();
        phoneLabel.setText("Phone number:");
        phoneField = new JTextField();
        phoneField.setText("to fill"); //#TODO
        phoneField.setEditable(false);
        
        healthcarePanel = new JPanel();
        healthcareLabel = new JLabel();
        healthcareLabel.setText("Healthcare plan:");
        planNameArea = new JTextField();
        planNameArea.setText("to fill"); //#TODO
        planNameArea.setEditable(false);
        subscribeButton = new JButton();
        subscribeButton.setText("Subscribe"); // #TODO button action

        changePlan = new JDialog();
        planComboBox = new JComboBox<>();
        planComboBox.setModel(new DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        updatePlan = new JButton();
        updatePlan.setText("Update Plan");
        planClosebutton = new JButton(); // #TODO button action
        planClosebutton.setText("Close");
        
        owedPanel = new JPanel();
        owedLabel = new JLabel();
        owedLabel.setText("Owed:");
        owedField = new JTextField();
        owedField.setText("to fill");
        owedField.setEditable(false);
        
        receiptButton = new JButton(); // #TODO button action
        receiptButton.setText("Receipt");
        receiptButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
            	//printReceipt();
            }
        });
        
        printReceipt = new JDialog();
        printReceipt.setAlwaysOnTop(true);
        printRecieptPayButton = new JButton();
        printRecieptPayButton.setText("Pay All");
        printRecieptPayButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
            	 // #TODO button action
            }
        });
        printRecieptCloseButton = new JButton(); // #TODO button action
        printRecieptCloseButton.setText("Close");
        
        deleteButton = new JButton(); // #TODO button action
        deleteButton.setText("Delete Patient");

        //What/where are these?? #TODO
        jScrollPane1 = new JScrollPane();
        jTextArea1 = new JTextArea();
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        GroupLayout printReceiptLayout = new GroupLayout(printReceipt.getContentPane());
        printReceipt.getContentPane().setLayout(printReceiptLayout);
        printReceiptLayout.setHorizontalGroup(
            printReceiptLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(printReceiptLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(printReceiptLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(printReceiptLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(printRecieptPayButton)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(printRecieptCloseButton)))
                .addContainerGap())
        );
        printReceiptLayout.setVerticalGroup(
            printReceiptLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(printReceiptLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 235, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(printReceiptLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(printRecieptPayButton)
                    .addComponent(printRecieptCloseButton))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        GroupLayout changePlanLayout = new GroupLayout(changePlan.getContentPane());
        changePlan.getContentPane().setLayout(changePlanLayout);
        changePlanLayout.setHorizontalGroup(
            changePlanLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(changePlanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(changePlanLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(planComboBox, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(changePlanLayout.createSequentialGroup()
                        .addGap(0, 232, Short.MAX_VALUE)
                        .addComponent(updatePlan)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(planClosebutton)))
                .addContainerGap())
        );
        changePlanLayout.setVerticalGroup(
            changePlanLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(changePlanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(planComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(changePlanLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(updatePlan)
                    .addComponent(planClosebutton))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new Dimension(700, 500));
        setResizable(true);

        searchResults.setViewportView(searchResultsList);

        patientDetails.setBorder(BorderFactory.createEtchedBorder());

        addressField.setViewportView(addressArea);
        addressField.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        addressField.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        addressField.setMinimumSize(new Dimension(12, 12));

        addressArea.setColumns(20);
        addressArea.setRows(5);

        healthcarePanel.setBorder(BorderFactory.createEtchedBorder());

        GroupLayout gl_healthCarePanel = new GroupLayout(healthcarePanel);
        healthcarePanel.setLayout(gl_healthCarePanel);
        gl_healthCarePanel.setHorizontalGroup(
            gl_healthCarePanel.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(gl_healthCarePanel.createSequentialGroup()
                .addContainerGap()
                .addGroup(gl_healthCarePanel.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(planNameArea, GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                    .addGroup(GroupLayout.Alignment.TRAILING, gl_healthCarePanel.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(subscribeButton)))
                .addContainerGap())
        );
        gl_healthCarePanel.setVerticalGroup(
            gl_healthCarePanel.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(gl_healthCarePanel.createSequentialGroup()
                .addContainerGap()
                .addComponent(planNameArea, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(subscribeButton)
                .addContainerGap())
        );

        owedPanel.setBorder(BorderFactory.createEtchedBorder());

        GroupLayout owedPanelLayout = new GroupLayout(owedPanel);
        owedPanel.setLayout(owedPanelLayout);
        owedPanelLayout.setHorizontalGroup(
            owedPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(owedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(owedPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(owedField, GroupLayout.Alignment.TRAILING)
                    .addGroup(GroupLayout.Alignment.TRAILING, owedPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(receiptButton)))
                .addContainerGap())
        );
        owedPanelLayout.setVerticalGroup(
            owedPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(owedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(owedField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(receiptButton)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        GroupLayout patientDetailsLayout = new GroupLayout(patientDetails);
        patientDetailsLayout.setHorizontalGroup(
        	patientDetailsLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(patientDetailsLayout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(patientDetailsLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(deleteButton, GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
        				.addGroup(patientDetailsLayout.createSequentialGroup()
        					.addGroup(patientDetailsLayout.createParallelGroup(Alignment.LEADING)
        						.addGroup(patientDetailsLayout.createSequentialGroup()
        							.addComponent(phoneLabel)
        							.addGap(18))
        						.addComponent(addressLabel)
        						.addComponent(nameLabel))
        					.addGap(50)
        					.addGroup(patientDetailsLayout.createParallelGroup(Alignment.LEADING)
        						.addComponent(addressField, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        						.addComponent(nameField, 301, 301, 301)
        						.addComponent(phoneField, 301, 301, 301)))
        				.addGroup(patientDetailsLayout.createSequentialGroup()
        					.addGroup(patientDetailsLayout.createParallelGroup(Alignment.LEADING)
        						.addComponent(healthcareLabel)
        						.addComponent(owedLabel))
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addGroup(patientDetailsLayout.createParallelGroup(Alignment.LEADING)
        						.addComponent(owedPanel, GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
        						.addComponent(healthcarePanel, GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE))))
        			.addContainerGap())
        );
        patientDetailsLayout.setVerticalGroup(
        	patientDetailsLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(patientDetailsLayout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(patientDetailsLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(nameField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(nameLabel))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(patientDetailsLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(phoneField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(phoneLabel))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(patientDetailsLayout.createParallelGroup(Alignment.TRAILING)
        				.addComponent(addressLabel, Alignment.LEADING)
        				.addComponent(addressField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(7)
        			.addGroup(patientDetailsLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(healthcareLabel)
        				.addComponent(healthcarePanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(patientDetailsLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(owedLabel)
        				.addComponent(owedPanel, GroupLayout.PREFERRED_SIZE, 102, Short.MAX_VALUE))
        			.addGap(18)
        			.addComponent(deleteButton)
        			.addContainerGap())
        );
        patientDetails.setLayout(patientDetailsLayout);

        GroupLayout layout = new GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(searchField, GroupLayout.PREFERRED_SIZE, 350, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED, 173, Short.MAX_VALUE)
        					.addComponent(searchButton, GroupLayout.PREFERRED_SIZE, 141, GroupLayout.PREFERRED_SIZE))
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(searchResults, GroupLayout.PREFERRED_SIZE, 126, GroupLayout.PREFERRED_SIZE)
        					.addGap(18)
        					.addComponent(patientDetails, GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)))
        			.addContainerGap())
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(searchField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(searchButton))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(searchResults, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(patientDetails, GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE))
        			.addContainerGap())
        );
        getContentPane().setLayout(layout);

        pack();
    }//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RegisterPatient.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(RegisterPatient.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(RegisterPatient.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(RegisterPatient.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FindPatient().setVisible(true);
            }
        });
    }
    
    // my methods
    private DefaultListModel refreshList(){
    	DefaultListModel newModel = new DefaultListModel
    }

    // System variables
    private ArrayList<Patient> patients;
    private String enteredName;
    private Patient selectedPatient;
    
    // GUI Variables
    private JButton searchButton;
    private JTextField searchField;
    private JScrollPane searchResults;
    private JList<Patient> searchResultsList;
    private JPanel patientDetails;
    private JTextArea addressArea;
    private JScrollPane addressField;
    private JLabel addressLabel;
    private JButton deleteButton;
    private JPanel healthcarePanel;
    private JLabel healthcareLabel;
    private JPanel owedPanel;
    private JTextField owedField;
    private JLabel owedLabel;
    private JTextField nameField;
    private JLabel nameLabel;
    private JTextField phoneField;
    private JLabel phoneLabel;
    private JButton planClosebutton;
    private JComboBox<String> planComboBox;
    private JTextField planNameArea;
    private JButton subscribeButton;
    private JDialog changePlan;
    private JButton updatePlan;
    private JDialog printReceipt;
    private JButton printRecieptCloseButton;
    private JButton printRecieptPayButton;
    private JButton receiptButton;
    private JScrollPane jScrollPane1;
    private JTextArea jTextArea1;
    // End of variables declaration
}
